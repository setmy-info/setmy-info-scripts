# PLACEHOLDER-BEGIN #

ADD_CUSTOM_TARGET(build             ALL)
ADD_CUSTOM_TARGET(clear             )

ADD_CUSTOM_TARGET(dirs
    mkdir -p ${BUILD_PATH} &&
    mkdir -p ${MAN_OUTPUT_PATH}/man1 &&
    mkdir -p ${MAN_OUTPUT_PATH}/man2 &&
    mkdir -p ${MAN_OUTPUT_PATH}/man3 &&
    mkdir -p ${MAN_OUTPUT_PATH}/man4 &&
    mkdir -p ${MAN_OUTPUT_PATH}/man5 &&
    mkdir -p ${MAN_OUTPUT_PATH}/man6 &&
    mkdir -p ${MAN_OUTPUT_PATH}/man7 &&
    mkdir -p ${MAN_OUTPUT_PATH}/man8 &&
    mkdir -p ${MAN_OUTPUT_PATH}/man9 &&
    mkdir -p ${INFO_OUTPUT_PATH} &&
    mkdir -p ${LIBRARY_OUTPUT_PATH}/profiles &&
    mkdir -p ${ETC_PROFILED_OUTPUT_PATH} &&
    mkdir -p ${ETC_SYSTEM_OUTPUT_PATH}
)

ADD_CUSTOM_TARGET(gzipman        cp ${RESOURCES_PATH}/man/*.1 ${MAN_OUTPUT_PATH}/man1 && gzip -f ${MAN_OUTPUT_PATH}/man1/*.1)
ADD_CUSTOM_TARGET(etcfiles       cp -R ${MAIN_SH_SOURCES_PATH}/etc/profile.d/* ${ETC_OUTPUT_PATH}/profile.d)
ADD_CUSTOM_TARGET(libshells      cp -R ${MAIN_SH_SOURCES_PATH}/lib/*.sh ${LIBRARY_OUTPUT_PATH})
ADD_CUSTOM_TARGET(shellScripts   cp ${MAIN_SH_SOURCES_PATH}/bin/* ${BINARY_OUTPUT_PATH})
ADD_CUSTOM_TARGET(groovyScripts  cp ${MAIN_GROOVY_SOURCES_PATH}/lib/*.groovy ${LIBRARY_OUTPUT_PATH})
ADD_CUSTOM_TARGET(pythonScripts  cp ${MAIN_PYTHON_SOURCES_PATH}/lib/*.py ${LIBRARY_OUTPUT_PATH})
ADD_CUSTOM_TARGET(clScripts      cp ${MAIN_COMMON_LISP_SOURCES_PATH}/bin/* ${BINARY_OUTPUT_PATH} && cp ${MAIN_COMMON_LISP_SOURCES_PATH}/lib/* ${LIBRARY_OUTPUT_PATH})
ADD_CUSTOM_TARGET(buildClear     rm -rf ./build)
ADD_CUSTOM_TARGET(pkgClear       rm -rf ./${PROJECT_NAME}*.tar.gz ./${PROJECT_NAME}*.rpm ./${PROJECT_NAME}*.sh ./${PROJECT_NAME}*.deb ./${PROJECT_NAME}*.tar.Z ./${PROJECT_NAME}*.7z ./${PROJECT_NAME}*.tar.bz2 ./${PROJECT_NAME}*.tar.xz ./${PROJECT_NAME}*.zip)
ADD_CUSTOM_TARGET(cmakeClear     rm -rf ./*.cmake ./_CPack_Packages install_manifest.txt CMakeCache.txt resources/CMakeFiles resources/cmake/CMakeFiles resources/cmake/*.cmake resources/cmake/CMakeCache.txt)
ADD_CUSTOM_TARGET(serviceScripts cp ${MAIN_SH_SOURCES_PATH}/etc/systemd/system/*.service ${ETC_SYSTEM_OUTPUT_PATH})
ADD_CUSTOM_TARGET(setprofiles    cp -R ${MAIN_SH_SOURCES_PATH}/lib/profiles/* ${LIBRARY_OUTPUT_PATH}/profiles)

# PLACEHOLDER-END #
